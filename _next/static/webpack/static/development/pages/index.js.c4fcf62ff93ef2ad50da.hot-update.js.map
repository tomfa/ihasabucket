{"version":3,"file":"static/webpack/static/development/pages/index.js.c4fcf62ff93ef2ad50da.hot-update.js","sources":["webpack:///./components/forms/Radio.tsx","webpack:///./components/forms/RadioGroup.tsx","webpack:///./pages/index.tsx"],"sourcesContent":["interface Props {\n  checked: boolean;\n  onChange: (value: string | number, isChecked: boolean) => void;\n  value: string | number;\n  label: string;\n  disabled?: boolean;\n}\n\nconst Radio = ({\n  checked,\n  onChange,\n  value,\n  label,\n  disabled = false,\n}: Props) => {\n  const name = String(value);\n  return (\n    <label htmlFor={name}>\n      <input\n        id={name}\n        value={value}\n        name={name}\n        type=\"radio\"\n        checked={checked}\n        onChange={() => !disabled && onChange(value, !checked)}\n        disabled={disabled}\n      />\n      <span>{label}</span>\n    </label>\n  );\n};\n\nexport default Radio;\n","import { useCallback } from 'react';\nimport { Option } from './types';\nimport Radio from './Radio';\n\ninterface Props {\n  options: Option[];\n  selectedOption: Option | null;\n  onChange: (selected: Option | null) => void;\n  title: string;\n  description?: string;\n  disabled?: boolean;\n}\n\nconst RadioGroup = ({\n  options,\n  selectedOption,\n  onChange,\n  title,\n  description,\n  disabled = false,\n}: Props) => {\n  const onOptionChange = useCallback(\n    (value, checked) => {\n      if (disabled) {\n        return;\n      }\n      if (!checked) {\n        return onChange(null);\n      }\n      const checkedOption = options.find((o) => o.value === value);\n      checkedOption && onChange(checkedOption);\n    },\n    [disabled, options, onChange],\n  );\n  return (\n    <>\n      {title && <h2>{title}</h2>}\n      {options.map((o) => (\n        <Radio\n          key={o.value}\n          checked={o === selectedOption}\n          onChange={onOptionChange}\n          value={o.value}\n          label={o.label}\n        />\n      ))}\n      {description && <p>{description}</p>}\n    </>\n  );\n};\n\nexport default RadioGroup;\n","import { Colored, Main, PageWrapper, Section } from '../components/utils';\nimport Header from '../components/Header';\nimport BlockQuote from '../components/BlockQuote';\nimport { useState } from 'react';\nimport RadioGroup from '../components/forms/RadioGroup';\nimport { Option } from '../components/forms/types';\n\nconst options = [\n  { value: 'fish', label: 'Fish' },\n  { value: 'hunt', label: 'Hunt' },\n];\n\nexport default function Home() {\n  const [selectedOption, setSelectedOption] = useState<Option | null>(null);\n  return (\n    <PageWrapper>\n      <Header />\n      <Main>\n        <BlockQuote\n          author={'Lolrus, the bucket walrus'}\n          source={'At the launch of AWS S3 in 2006'}>\n          <>\n            Hosting a<Colored> webapp </Colored>\n            or need to store uploads? Put them in S3 buckets. It&apos;s\n            <Colored> cheap </Colored>\n            and\n            <Colored> reliable</Colored>. Let me show how\n            <Colored> easy </Colored>\n            it is.\n          </>\n        </BlockQuote>\n      </Main>\n      <Section>\n        <RadioGroup\n          options={options}\n          selectedOption={selectedOption}\n          onChange={setSelectedOption}\n          title={'Do you want to fish or hunt?'}\n          description={'It matters because of the animal'}\n        />\n      </Section>\n\n    </PageWrapper>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAQA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChCA;AAEA;AACA;AAUA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}