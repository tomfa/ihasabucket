{"version":3,"file":"static/webpack/static/development/pages/index.js.11e8e3f6622954c60ded.hot-update.js","sources":["webpack:///./components/forms/Dropdown.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport { Option } from '../../types';\nimport Header from '../Header.style';\nimport Description from './Description.style';\nimport Question from './Question.style';\nimport InputContainer from './InputContainer.styles';\nimport SubmitButton from './SubmitButton.styles';\n\ninterface Props {\n  id: string;\n  options: Option[];\n  selectedOption: Option | null;\n  onChange: (selected: Option | null) => void;\n  title: string;\n  description?: string;\n  disabled?: boolean;\n}\n\nconst Select = styled.select`\n  font-size: 1.2rem;\n  padding: 1rem;\n  flex: 1;\n  border: none;\n  appearance: none;\n\n  &:focus,\n  &:active {\n    outline-style: dashed;\n    outline-width: 2px;\n    outline-color: ${(p) => p.theme.colors.primary};\n    margin-right: 2px;\n  }\n`;\nconst Choice = styled.option``;\n\nconst DropDown = ({\n  id,\n  options,\n  selectedOption,\n  onChange,\n  title,\n  description,\n  disabled = false,\n}: Props) => {\n  const onOptionChange = useCallback(\n    (value: string) => {\n      if (disabled) {\n        return;\n      }\n      const checkedOption = options.find((o) => o.value === value);\n      checkedOption && onChange(checkedOption);\n    },\n    [disabled, options, onChange]\n  );\n  return (\n    <Question>\n      {title && <Header>{title}</Header>}\n      <InputContainer>\n        <Select\n          value={selectedOption?.value}\n          onChange={(e) => onOptionChange(e.target.value)}>\n          {options.map((o) => (\n            <Choice key={`${id}-${o.value}`} value={o.value} label={o.label} />\n          ))}\n        </Select>\n        <SubmitButton\n          type=\"submit\"\n          complete={!!selectedOption}\n          onClick={() => onOptionChange(selectedOption.value)}\n        />\n      </InputContainer>\n\n      {description && <Description>{description}</Description>}\n    </Question>\n  );\n};\n\nexport default DropDown;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAAA;AAAA;AAWA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}