{"version":3,"file":"static/webpack/static/development/pages/index.js.f56523a5c2869378e583.hot-update.js","sources":["webpack:///./components/input/CheckboxGroup.tsx","webpack:///./pages/index.tsx"],"sourcesContent":["import { Option } from './types';\nimport Checkbox from './Checkbox';\nimport { useCallback } from \"react\";\n\ninterface Props {\n  options: Option[];\n  selectedOption: Option | null;\n  onChange: (selected: Option | null) => void;\n  title: string;\n  disabled?: boolean;\n}\n\nconst CheckboxGroup = ({\n  options,\n  selectedOption,\n  onChange,\n  title,\n  disabled,\n}: Props) => {\n  const onOptionChange = useCallback(() => (value, checked) => {\n    if (disabled) {\n      return;\n    }\n    if (!checked) {\n      return onChange(null);\n    }\n    const checkedOption = options.find((o) => o.value === value);\n    checkedOption && onChange(checkedOption);\n  }, [disabled, options, onChange]);\n  return (\n    <>\n      {title && <h2>{title}</h2>}\n      {options.map((o) => (\n        <Checkbox\n          key={o.value}\n          checked={selectedOption && selectedOption.value === o.value}\n          onChange={onOptionChange}\n          value={o.value}\n          label={o.label}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default CheckboxGroup;\n","import { Colored, Main, PageWrapper, Section } from '../components/utils';\nimport Header from '../components/Header';\nimport BlockQuote from '../components/BlockQuote';\nimport Checkbox from '../components/input/Checkbox';\nimport { useState } from 'react';\nimport CheckboxGroup from \"../components/input/CheckboxGroup\";\n\nexport default function Home() {\n  const [selected, setSelected] = useState<string | null | number>(null);\n  return (\n    <PageWrapper>\n      <Header />\n      <Main>\n        <BlockQuote\n          author={'Lolrus, the bucket walrus'}\n          source={'At the launch of AWS S3 in 2006'}>\n          <>\n            Hosting a<Colored> webapp </Colored>\n            or need to store uploads? Put them in S3 buckets. It&apos;s\n            <Colored> cheap </Colored>\n            and\n            <Colored> reliable</Colored>. Let me show how\n            <Colored> easy </Colored>\n            it is.\n          </>\n        </BlockQuote>\n      </Main>\n      <Section>\n        <CheckboxGroup options={[{value: 'fish', label: 'Fish'}, {value: 'hunt', label: 'Hunt'}]} selectedOption={{ value: 'fish', label: 'Fish'}} onChange={() => {}} title={'Do you want to fish or hunt?'} />\n      </Section>\n    </PageWrapper>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AASA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AATA;AAUA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}