{"version":3,"file":"static/webpack/static/development/pages/index.js.9a99790c96c45cf72031.hot-update.js","sources":["webpack:///./utils/questions.ts"],"sourcesContent":["import { Option, Question } from '../types';\nimport { QUESTION_ID } from '../enums';\nimport questionData from './questionData';\n\nexport const generateDefaultRadioSelectedOptions = (\n  radioQuestions: Question[]\n): RadioSelectionMap =>\n  radioQuestions\n    .filter((q) => q.type === 'radio' || q.type === 'dropdown')\n    .reduce(\n      (map, question) => ({\n        ...map,\n        [question.id]: getDefaultRadioOption(question),\n      }),\n      {}\n    );\n\nexport const generateDefaultCheckboxSelectedOptions = (\n  checkboxQuestions: Question[]\n): CheckboxSelectionMap =>\n  checkboxQuestions\n    .filter((q) => q.type === 'checkbox')\n    .reduce(\n      (map, question) => ({\n        ...map,\n        [question.id]: getDefaultCheckboxOption(question),\n      }),\n      {}\n    );\n\nexport const getDefaultRadioOption = (question: Question): Option | null => {\n  if (question.type === 'text') {\n    return null;\n  }\n  console.log(question)\n  return (\n    question.options.find((o) => o.value === question.defaultValue) || null\n  );\n};\n\nexport const getDefaultCheckboxOption = (question: Question): Option[] => {\n  if (question.type === 'text' || !question.defaultValue) {\n    return [];\n  }\n  if (typeof question.defaultValue === 'string') {\n    return question.options.filter((o) => o.value === question.defaultValue);\n  }\n  if (question.defaultValue instanceof Array) {\n    return question.options.filter((o) =>\n      (question.defaultValue as (string | number)[]).includes(o.value)\n    );\n  }\n  return [];\n};\n\nexport type RadioSelectionMap = Partial<\n  {\n    [questionId in QUESTION_ID]: Option | null;\n  }\n>;\nexport type CheckboxSelectionMap = Partial<\n  {\n    [questionId in QUESTION_ID]: Option[];\n  }\n>;\nexport type TextAnswerMap = Partial<\n  {\n    [questionId in QUESTION_ID]: string | null;\n  }\n>;\n\nexport const questions = Object.values(questionData);\nexport const questionsMap = questionData;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AAAA;AAIA;AAAA;AAEA;AAAA;AANA;AAaA;AAAA;AAIA;AAAA;AAEA;AAAA;AANA;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAkBA;AACA;;;;A","sourceRoot":""}