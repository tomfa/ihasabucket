{"version":3,"file":"static/webpack/static/development/pages/index.js.ec974a148ccc62e62311.hot-update.js","sources":["webpack:///./components/BlockQuote/index.tsx","webpack:///./components/utils.tsx","webpack:///./pages/index.tsx","webpack:///./styles/theme.ts"],"sourcesContent":["import { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nimport Quote from './Quote';\nimport Source from './Source';\n\ntype Props = {\n  children: ReactNode;\n  author?: string;\n  source?: string;\n};\n\nconst BlockQuote = ({ children, author, source }: Props) => (\n  <Block>\n    <Quote>{children}</Quote>\n    {(author || source) && (\n      <Source>\n        {author ? <>&mdash; {author}</> : ''}\n        {author && source && <br />}\n        {source && <em>{source}</em>}\n      </Source>\n    )}\n  </Block>\n);\n\nconst Block = styled.blockquote`\n  font-family: ${(p) => p.theme.fonts.secondary}\n  max-width: 620px;\n  margin-left: 0;\n  margin-right: 0;\n  align-self: center;\n`;\n\nexport default BlockQuote;\n","import styled from 'styled-components';\n\nexport const SectionWrapper = styled.div`\n  width: 100%;\n  background-color: ${(props) => props.backgroundColor};\n  color: ${(props) => props.color};\n`;\n\nexport const Section = styled.section`\n  max-width: ${(p) => p.theme.layout.maxWidth}px;\n  width: 100vw;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nexport const Main = styled(Section)``;\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n`;\n\nexport const Colored = styled.span`\n  color: ${(p) => p.color || p.theme.colors.primary};\n`;\n","import { Colored, Main, PageWrapper } from '../components/utils';\nimport Header from '../components/Header/';\nimport BlockQuote from '../components/BlockQuote/';\n\nexport default function Home() {\n  return (\n    <PageWrapper>\n      <Header />\n      <Main>\n        <BlockQuote\n          author={'Lolrus, the bucket walrus'}\n          source={'At the launch of AWS S3 in 2006'}>\n          <>\n            Hosting a <Colored>webapp</Colored> or need a place to store files?\n            Put them in S3 buckets. It&apos;s <Colored>cheap</Colored> and{' '}\n            <Colored>reliable</Colored>. Let me show how <Colored>easy</Colored>{' '}\n            it is.\n          </>\n        </BlockQuote>\n      </Main>\n    </PageWrapper>\n  );\n}\n","import { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\n\nexport const theme = {\n  fonts: {\n    primary:\n      '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\\n' +\n      '    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif',\n    secondary: \"'Barlow Condensed', sans-serif\",\n  },\n  colors: {\n    primary: '#fd9228',\n    secondary: '',\n    bgPrimary: '#ffffff',\n    bgSecondary: '#111111',\n    textPrimary: '#000000',\n    textSecondary: '#fafafa',\n    links: '#0070f3',\n  },\n  layout: {\n    maxWidth: '800',\n  },\n};\n\nexport const useTheme = (): typeof theme => {\n  const themeContext = useContext(ThemeContext);\n  return (themeContext as unknown) as typeof theme;\n};\n\nexport default theme;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAhBA;AAqBA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}