{"version":3,"file":"static/webpack/static/development/pages/index.js.2e06cd41cc32bd0d74bc.hot-update.js","sources":["webpack:///./utils/terraform/iamUser.ts","webpack:///./utils/terraform/names.ts"],"sourcesContent":["import { QuestionSummary, ModuleSpec } from './types';\n\nexport const getIAMUserTfContent = ({\n  webApp,\n  bucketName,\n  forwardingBucket,\n  staging,\n}: QuestionSummary): ModuleSpec[] => {\n  const getParameters = getParams()\n  if (!bucketName) {\n    return [];\n  }\n  const parameters: Record<string, string> = {\n    bucket_names: `[\"${bucketName}\"]`,\n    iam_user_name: `\"${bucketName}-user\"`,\n  };\n  if (webApp) {\n    parameters.cloudfront_distribution_ids = `[module.web-app.CLOUDFRONT_DISTRIBUTION_ID]`;\n  }\n  return [\n    {\n      name: 'user',\n      source: `git::https://github.com/tomfa/terraform.git//user`,\n      parameters,\n    },\n  ];\n};\n\nconst getParams = ({ })\n","import { domainIsApex, domainIsWWW, getApexDomain } from '../domain';\nimport { QuestionSummary, BucketProp } from './types';\nimport { INPUT } from \"../../enums\";\n\nexport const getBucketModuleNames = ({\n  webApp,\n  staging,\n  forwardingBucket,\n}: QuestionSummary): BucketProp => {\n  const genericBucketName = webApp ? 'web-app' : 'file-storage';\n  const mainBucket = staging\n    ? `${genericBucketName}-production`\n    : genericBucketName;\n  const stagingBucket = staging ? `${genericBucketName}-staging` : null;\n  return {\n    staging: stagingBucket,\n    main: mainBucket,\n    redirect: forwardingBucket ? 'redirect' : null,\n  };\n};\n\nexport const getBucketTfValues = ({\n  forwardingBucket,\n  staging,\n  bucketName\n}: QuestionSummary): BucketProp => {\n  return {\n    staging: staging ? `\"${getStagingBucketName(bucketName)}\"` : null,\n    main: getBucketNameTfValue(bucketName),\n    redirect: forwardingBucket || null,\n  }\n}\n\nexport const getBucketNameTfValue = (bucketName: string): string => bucketName ? `\"${bucketName}\"` : `var.${INPUT.BUCKET_NAME}`;\n\nexport const getStagingBucketName = (bucketName: string): string => {\n  if (!bucketName) {\n    return `staging.\\\\$\\{var.bucket_name}`;\n  }\n  return getStagingDomain(bucketName);\n};\n\nexport const getStagingDomain = (domain: string): string => {\n  if (domainIsApex(domain) || domainIsWWW(domain)) {\n    const apex = getApexDomain(domain);\n    return `staging.${apex}`;\n  }\n  return `staging-${domain}`;\n};\n\nexport const getBucketDomains = ({\n  bucketName,\n  staging,\n  forwardingBucket,\n}: QuestionSummary): BucketProp => {\n  const stagingBucket = staging ? getStagingDomain(bucketName) : null;\n  return {\n    staging: stagingBucket,\n    main: bucketName,\n    redirect: forwardingBucket || null,\n  };\n};\n"],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAEA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAIA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;A","sourceRoot":""}