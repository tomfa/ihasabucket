{"version":3,"file":"static/webpack/static/development/pages/index.js.8b49266aab62d20f70da.hot-update.js","sources":["webpack:///./utils/terraform/descriptionText.ts"],"sourcesContent":["import { QuestionSummary } from './types';\n\nexport const getTerraPackageDescription = (\n  props: QuestionSummary\n): string[] => {\n  const certificateWarningText = getCertificateWarning(props);\n  const outcomeText = getOutcomeDescription(props);\n  return [certificateWarningText, outcomeText].filter((t) => !!t);\n};\n\nconst getCertificateWarning = (props: QuestionSummary): string => {\n  if (!props.createCertificates) {\n    return '';\n  }\n  if (props.configureDns) {\n    return (\n      'During the setup, we will request HTTPS certificates for your domain, and verify that they are set up correctly. ' +\n      'This means that the DNS changes you made has to have propagated before it continues. Until then, the script will not complete. ' +\n      'Instead, it may time out. No worries though, just re-run the script after a while, when the DNS records are correct. ' +\n      'It will continue where it left off.'\n    );\n  }\n  return (\n    'During the setup, we will request HTTPS certificates for your domain, and verify that they are set up correctly. ' +\n    'This means you will have to go to change your DNS pointers as specified in the Certificate Manager in the AWS console. ' +\n    'These instructions will be shown under the certificate in status \"Pending Verification\", which will show up after you have start this script. ' +\n    'Until that is done, -and- the DNS changes have propageted, the script WILL NOT COMPLETE. ' +\n    'Instead, it will likely time out. No worries though, just re-run the script after a while, when the DNS records are correct. ' +\n    'It will continue where it left off.'\n  );\n};\n\nconst getOutcomeDescription = (props: QuestionSummary): string => {\n  const useCaseText = getUseCaseDescription(props);\n  const count = props.staging ? 'two sets of' : 'a';\n  const infraStructure = `S3 bucket${props.webApp ? ' + Cloudfront' : ''};`;\n  return `Once run successfully, the script will create ${count} ${infraStructure} in ${props.region}, configured ${useCaseText}.`;\n};\n\nconst getUseCaseDescription = ({\n  webApp,\n  staticPage,\n  shared,\n}: QuestionSummary): string => {\n  if (webApp) {\n    if (staticPage) {\n      return 'to serve a solid statically generated web app';\n    }\n    return 'to serve a blazingly fast single-page web app';\n  }\n  if (shared) {\n    return 'for hosting publicly available files';\n  }\n  return 'for storing and serving files for authorized requests';\n};\n"],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAMA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}