{"version":3,"file":"static/webpack/static/development/pages/index.js.d08caabea8eb1be06e0f.hot-update.js","sources":["webpack:///./utils/splitbee.ts"],"sourcesContent":["import { Answer } from '../types';\n\nexport const trail = (\n  name: string,\n  data?: { [key: string]: string | boolean | number | null | Answer }\n) => {\n  try {\n    if (process.env.NODE_ENV === 'development') {\n      return;\n    }\n    console.log(process.env.NODE_ENV);\n    if (sensitiveKeys.includes(name)) {\n      return;\n    }\n    const payload = data && Object.fromEntries(Object.entries(data).map(clean));\n    // @ts-ignore\n    if (!window || !window.splitbee) {\n      return;\n    }\n    // @ts-ignore\n    window.splitbee.track(name, payload);\n  } catch (error) {\n    // That's fine <3\n  }\n};\n\nconst clean = ([key, value]): string[] => {\n  if (sensitiveKeys.includes(key)) {\n    return [key, '---'];\n  }\n  if (['string', 'number', 'boolean'].includes(typeof value)) {\n    return [key, value];\n  }\n  if (!value) {\n    return [key, null];\n  }\n  if (value instanceof Array) {\n    return [key, value.map((v) => v.value).join(',')];\n  }\n  return [key, value.value];\n};\n\nconst sensitiveKeys = ['bucketName', 'forwardingBucket'];\n"],"mappings":";;;;;;;;;;;;;;AAEA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}