{"version":3,"file":"static/webpack/static/development/pages/index.js.80716726bbdc7bdfdd45.hot-update.js","sources":["webpack:///./components/Infrastructure/Code.tsx","webpack:///./components/Infrastructure/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport Mute from './Mute.style';\nimport Pre from './Pre.style';\n\ntype Props = {mainTfContent: string[], bucketName: string}\n\nconst Code = ({mainTfContent, bucketName}: Props) => (\n  <Pre>\n    <Mute># Create a folder to store infrastructure code</Mute>\n    {'\\n'}\n    mkdir infrastructure{'\\n'}\n    cd infrastructure{'\\n'}\n    {'\\n'}\n    <Mute># Create config file</Mute>\n    {'\\n'}\n    cat &lt;&lt;EOT &gt;&gt; ${bucketName || 'main.tf'}.tf{'\\n'}\n    {mainTfContent.map((line, i) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <span key={i}>\n        {line}\n        {'\\n'}\n      </span>\n    ))}\n    EOT{'\\n'}\n    {'\\n'}\n    <Mute># Deploy</Mute>\n    {'\\n'}\n    terraform init{'\\n'}\n    terraform apply{'\\n'}\n  </Pre>\n);\n\nexport default Code;\n","/* eslint-disable react/no-array-index-key */\n\nimport { useEffect, useState } from 'react';\nimport Description from '../forms/Description.style';\nimport Header from '../Header.style';\nimport { getTerraFormPackage } from './utils';\nimport Pre from './Pre.style';\nimport Mute from './Mute.style';\nimport LoadingIcon from './LoadingIcon';\nimport Code from \"./Code\";\n\ntype Props = {\n  webApp: boolean;\n  staging: boolean;\n  shared: boolean;\n  staticPage: boolean;\n  bucketName: string;\n  region: string;\n};\n\nconst Infrastructure = (props: Props) => {\n  const { description, mainTfContent } = getTerraFormPackage(props);\n  const [loading, setLoading] = useState<boolean>(true);\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 800);\n  }, [mainTfContent]);\n  if (loading) {\n    return <LoadingIcon />;\n  }\n  return (\n    <>\n      <Header as={'h1'}>Bucket is served!</Header>\n      Just run the script below!\n      <Code bucketName={props.bucketName} mainTfContent={mainTfContent}/>\n      <Description>\n        The script above ask you for desired bucket name and AWS region.\n      </Description>\n      <Description>{description}</Description>\n      <Header>Prerequisites</Header>\n      <h4>AWS Account</h4>\n      <p>\n        If you don&apos;t have an AWS account already, sign up at{' '}\n        <a href=\"https://portal.aws.amazon.com/billing/signup#/start\">\n          aws.amazon.com\n        </a>\n      </p>\n      <p>\n        If you don&apos;t have your <strong>AWS_SECRET_ACCESS_KEY</strong> and{' '}\n        <strong>AWS_ACCESS_KEY_ID</strong> handy, find those in the top right\n        corner under your name &gt; Security credentials. They should be\n        exported to your environment:\n        <Pre>\n          <Mute># Export AWS keys{'\\n'}</Mute>\n          export AWS_SECRET_ACCESS_KEY=yaAS$1...{'\\n'}\n          export AWS_ACCESS_KEY_ID=AKIA...\n        </Pre>\n      </p>\n      <h4>Terraform installed</h4>\n      <p>\n        If you haven&apos;t already,{' '}\n        <a href=\"https://learn.hashicorp.com/tutorials/terraform/install-cli\">\n          install Terraform\n        </a>\n        {`\\n`}\n        <Pre>\n          <Mute># For Macs with homebrew{'\\n'}</Mute>\n          brew install hashicorp/tap/terraform\n        </Pre>\n        <Description>\n          See{' '}\n          <a href=\"https://learn.hashicorp.com/tutorials/terraform/install-cli\">\n            learn.hashicorp.com/tutorials/terraform/install-cli\n          </a>{' '}\n          for other platforms.\n        </Description>\n      </p>\n    </>\n  );\n};\n\nexport default Infrastructure;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AACA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChsourceRoot":""}