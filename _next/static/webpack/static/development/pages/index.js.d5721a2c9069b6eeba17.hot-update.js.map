{"version":3,"file":"static/webpack/static/development/pages/index.js.d5721a2c9069b6eeba17.hot-update.js","sources":["webpack:///./sections/FAQ/Deployment.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { QuestionSummary } from '../../utils/terraform/types';\nimport DropDown from '../../components/forms/Dropdown';\nimport { Option } from '../../types';\nimport Pre from '../../components/code/Pre.style';\n\nconst local: Option = { value: 'local', label: 'Command line' };\nconst github: Option = { value: 'github', label: 'Github Actions' };\nconst circleCI: Option = { value: 'circleCI', label: 'Circle CI' };\nconst wercker: Option = { value: 'wercker', label: 'Oracle Wercker' };\nconst gitlab: Option = { value: 'gitlab', label: 'Gitlab CI' };\n\nconst deploymentOptions: Array<Option> = [\n  local,\n  github,\n  gitlab,\n  circleCI,\n  wercker,\n];\n\nconst Deployment = ({ summary }: { summary: QuestionSummary }) => {\n  const [ci, setCi] = useState<Option>(github);\n  return (\n    <>\n      <p>Depends where you want to deploy it from.</p>\n      <DropDown\n        id={'deployment'}\n        options={deploymentOptions}\n        selectedOption={ci}\n        onChange={setCi}\n        title={''}\n      />\n      {ci === local && <LocalDeployment summary={summary} />}\n      {ci === wercker && <WerckerDeployment summary={summary} />}\n      {ci === github && <GithubDeployment summary={summary} />}\n      {ci === gitlab && <GitlabDeployment summary={summary} />}\n      {ci === circleCI && <CircleCIDeployment summary={summary} />}\n    </>\n  );\n};\n\nconst LocalDeployment = ({ summary }: { summary: QuestionSummary }) => (\n  <>\n    <p>\n      1. Download and install the{' '}\n      <a href=\"https://aws.amazon.com/cli/\">AWS CLI</a>.\n    </p>\n    <p>2. Add the following to your package.json</p>\n    <Pre>\n      &quot;scripts&quot;: &#123;\n      <br />\n      {'  '}...\n      <br />\n      {'  '}&quot;deploy&quot;: &quot;aws s3 sync build/ s3://\n      {summary.bucketName || 'my-beautiful-bucket'}&quot;\n      <br />\n      &#125;\n      <br />\n    </Pre>\n    <p>\n      This will sync the local folder build to s3. You might have to adjust that\n      for your own setup.\n    </p>\n    <p>\n      With the script above, you will be able to deploy to S3 using{' '}\n      <code>yarn deploy</code> locally, given that you have your AWS credentials\n      in the environment.\n    </p>\n  </>\n);\n\nconst WerckerDeployment = ({ summary }: { summary: QuestionSummary }) => (\n  <>\n    <p>\n      1. Add the following code to your <code>wercker.yml</code>\n    </p>\n    <Pre>\n      deploy_frontend:\n      <br />\n      {'  '}steps:\n      <br />\n      {'    '}- script:\n      <br />\n      {'      '}name: install dependencies\n      <br />\n      {'      '}code: yarn\n      <br />\n      {'    '}- script:\n      <br />\n      {'      '}name: build frontend\n      <br />\n      {'      '}code: npm run build\n      <br />\n      {'    '}- s3sync:\n      <br />\n      {'      '}source_dir: build\n      <br />\n      {'      '}delete-removed: true\n      <br />\n      {'      '}key-id: $AWS_ACCESS_KEY_ID\n      <br />\n      {'      '}key-secret: $AWS_SECRET_ACCESS_KEY\n      <br />\n      {'      '}bucket-url: s3://$AWS_S3_BUCKET_NAME\n      <br />\n      {'    '}- script:\n      <br />\n      {'      '}name: invalidate cloudfront cache\n      <br />\n      {'      '}code: |\n      <br />\n      {'        '}if [[ -n &quot;$AWS_CDN_DISTRIBUTION_ID&quot; ]]; then\n      <br />\n      {'          '}sudo apt-get update\n      <br />\n      {'          '}sudo apt-get install unzip -y\n      <br />\n      {'          '}sudo apt-get install libpython-dev -y\n      <br />\n      {'          '}wget https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\n      <br />\n      {'          '}unzip awscli-bundle.zip\n      <br />\n      {'          '}sudo ./awscli-bundle/install -i /usr/local/aws -b\n      /usr/local/bin/aws\n      <br />\n      {'          '}rm -rf awscli-bundle*\n      <br />\n      {'          '}aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID\n      <br />\n      {'          '}aws configure set aws_secret_access_key\n      $AWS_SECRET_ACCESS_KEY\n      <br />\n      {'          '}aws cloudfront create-invalidation --distribution-id\n      $AWS_CDN_DISTRIBUTION_ID --paths &quot;/&#42;&quot;\n      <br />\n      {'        '}fi\n    </Pre>\n    <p>\n      Set this pipeline up in{' '}\n      <a href=\"https://app.wercker.com\">app.wercker.com</a> with the required\n      keys, and add a workflow to run it on master.\n    </p>\n  </>\n);\n\nconst GithubDeployment = ({ summary }: { summary: QuestionSummary }) => (\n  <>\n    <p>\n      1. Add the following file to your repo: <code>.github/workflows/main.yml</code>\n    </p>\n    <Pre>\n      name: Production Build\n      <br />on:\n      <br />{'  '}pull_request:\n      <br />{'  '}push:\n      <br />{'  '}{'  '}branches:\n      <br />{'  '}{'  '}{'  '}- master\n      <br />jobs:\n      <br />{'  '}build:\n      <br />{'  '}{'  '}runs-on: ubuntu-latest\n<br />\n      <br />{'  '}{'  '}strategy:\n      <br />{'  '}{'  '}{'  '}matrix:\n      <br />{'  '}{'  '}{'  '}{'  '}node-version: [13.x]\n<br />\n      <br />{'  '}{'  '}steps:\n      <br />{'  '}{'  '}- uses: actions/checkout@v1\n      <br />{'  '}{'  '}- name: Use Node.js $&#123;&#123; matrix.node-version &#125;&#125;\n      <br />{'  '}{'  '}uses: actions/setup-node@v1\n      <br />{'  '}{'  '}with:\n      <br />{'  '}{'  '}{'  '}node-version: $&#123;&#123; matrix.node-version &#125;&#125;\n      <br />{'  '}{'  '}- name: Yarn Install\n      <br />{'  '}{'  '}{'  '}run: |\n      <br />{'  '}{'  '}{'  '}{'  '}yarn install\n      <br />{'  '}{'  '}- name: Production Build\n      <br />{'  '}{'  '}{'  '}run: |\n      <br />{'  '}{'  '}{'  '}{'  '}yarn build\n      <br />{'  '}{'  '}- name: Deploy to S3\n      <br />{'  '}{'  '}{'  '}uses: jakejarvis/s3-sync-action@master\n      <br />{'  '}{'  '}{'  '}with:\n      <br />{'  '}{'  '}{'  '}{'  '}args: --acl public-read --delete\n      <br />{'  '}{'  '}{'  '}env:\n      <br />{'  '}{'  '}{'  '}{'  '}AWS_S3_BUCKET: $&#123;&#123; secrets.AWS_PRODUCTION_BUCKET_NAME &#125;&#125;\n      <br />{'  '}{'  '}{'  '}{'  '}AWS_ACCESS_KEY_ID: $&#123;&#123; secrets.AWS_ACCESS_KEY_ID &#125;&#125;\n      <br />{'  '}{'  '}{'  '}{'  '}AWS_SECRET_ACCESS_KEY: $&#123;&#123; secrets.AWS_SECRET_ACCESS_KEY &#125;&#125;\n      <br />{'  '}{'  '}{'  '}{'  '}AWS_REGION: &quot;{summary.region}&quot;\n      <br />{'  '}{'  '}{'  '}{'  '}SOURCE_DIR: &quot;public&quot;\n    </Pre>\n    <p>\n      Set this up in the Actions tab in your Github repo.\n    </p>\n  </>\n);\n\nexport const GitlabDeployment  = ({ summary }: { summary: QuestionSummary }) => (\n  <>\n    <p>See <a href=\"https://hackernoon.com/using-gitlab-ci-cd-to-auto-deploy-your-vue-js-application-to-aws-s3-9affe1eb3457\">this article</a> for some hints.</p>\n    <Pre>\n      deploy prod:\n      <br />{' '}image: python:latest\n      <br />{' '}stage: deploy\n      <br />{' '}only:\n      <br />{'   '}- tags\n      <br />{' '}script:\n      <br />{'   '}- pip install awscli\n      <br />{'   '}- aws s3 sync ./dist s3://YOUR_BUCKET_NAME\n    </Pre>\n    </>\n\n)\n\nexport const CircleCIDeployment  = ({ summary }: { summary: QuestionSummary }) => (\n  <p>See <a href=\"https://circleci.com/developer/orbs/orb/circleci/aws-s3#commands-sync\">CircleCI S3 Orbs</a></p>\n)\n\n\n\nexport default Deployment;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxrEA;AACA;AA0EA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3CA;AACA;AAgDA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;;;;A","sourceRoot":""}