{"version":3,"file":"static/webpack/static/development/pages/index.js.794cdd5efeafb61be19d.hot-update.js","sources":["webpack:///./components/forms/Checkbox.tsx","webpack:///./components/forms/CheckboxGroup.tsx","webpack:///./components/forms/Choices.style.tsx","webpack:///./components/forms/Description.style.tsx","webpack:///./components/forms/Input.style.tsx","webpack:///./components/forms/Label.style.tsx","webpack:///./components/forms/Question.style.tsx","webpack:///./components/forms/Radio.tsx","webpack:///./components/forms/RadioGroup.tsx","webpack:///./components/forms/Title.style.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./pages/index.tsx"],"sourcesContent":["import Label from './Label.style';\nimport Input from './Input.style';\n\ninterface Props {\n  checked: boolean;\n  onChange: (value: string | number, isChecked: boolean) => void;\n  value: string | number;\n  label: string;\n  disabled?: boolean;\n}\n\nconst Checkbox = ({\n  checked,\n  onChange,\n  value,\n  label,\n  disabled = false,\n}: Props) => {\n  const name = String(value);\n  return (\n    <Label htmlFor={name} checked={checked}>\n      <Input\n        id={name}\n        value={value}\n        name={name}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={() => !disabled && onChange(value, !checked)}\n        disabled={disabled}\n      />\n      <span>{label}</span>\n    </Label>\n  );\n};\n\nexport default Checkbox;\n","import { useCallback } from 'react';\n\nimport { Option } from './types';\nimport Checkbox from './Checkbox';\nimport Title from './Title.style';\nimport Description from './Description.style';\nimport Choices from './Choices.style';\nimport Question from \"./Question.style\";\n\ninterface Props {\n  options: Option[];\n  selectedOptions: Option[];\n  onChange: (selected: Option[]) => void;\n  title: string;\n  description?: string;\n  disabled?: boolean;\n}\n\nconst CheckboxGroup = ({\n  options,\n  selectedOptions,\n  onChange,\n  title,\n  description,\n  disabled = false,\n}: Props) => {\n  const onOptionChange = useCallback(\n    (value, checked) => {\n      if (disabled) {\n        return;\n      }\n      const selectedExceptThisOption = selectedOptions.filter(\n        (o) => o.value !== value,\n      );\n      if (!checked) {\n        return onChange(selectedExceptThisOption);\n      }\n      const checkedOption = options.find((o) => o.value === value);\n      checkedOption && onChange([...selectedExceptThisOption, checkedOption]);\n    },\n    [disabled, options, onChange, selectedOptions],\n  );\n  return (\n    <Question>\n      {title && <Title>{title}</Title>}\n      <Choices>\n        {options.map((o) => (\n          <Checkbox\n            key={o.value}\n            checked={selectedOptions.includes(o)}\n            onChange={onOptionChange}\n            value={o.value}\n            label={o.label}\n          />\n        ))}\n      </Choices>\n      {description && <Description>{description}</Description>}\n    </Question>\n  );\n};\n\nexport default CheckboxGroup;\n","import styled from 'styled-components';\n\nconst Choices = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default Choices;\n","import styled from 'styled-components';\n\nconst DescriptionStyle = styled.p`\n  color: ${(p) => p.theme.colors.textMuted};\n  font-size: 0.8rem;\n  font-style: italic;\n`;\n\nexport default DescriptionStyle;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  &[type='checkbox'] {\n    display: none;\n  }\n  &[type='radio'] {\n    display: none;\n  }\n`;\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst Label = styled.label`\n  position: relative;\n  cursor: pointer;\n  padding-bottom: 0.7rem;\n  padding-top: 0.7rem;\n  padding-left: 3rem;\n  margin-bottom: 3px;\n  background-color: ${(p) => (p.checked ? p.theme.colors.primary : '')};\n  color: ${(p) => (p.checked ? p.theme.colors.textSecondary : p.theme.colors.textPrimary)};\n\n  &:before {\n    content: '';\n    display: block;\n    width: ${(p) => (p.checked ? '10px' : '20px')};\n    height: 20px;\n    border: 1px solid ${(p) => (p.checked ? 'white' : 'black')};\n    position: absolute;\n    left: ${(p) => (p.checked ? '20px' : '15px')};\n    top: ${(p) => (p.checked ? '5px' : '10px')};\n    opacity: ${(p) => (p.checked ? 1 : 0.6)};\n    -webkit-transition: all 0.12s, border-color 0.08s;\n    transition: all 0.12s, border-color 0.08s;\n    border-top-color: ${(p) => p.checked && 'transparent'};\n    border-left-color: ${(p) => p.checked && 'transparent'};\n    transform: ${(p) => p.checked && 'rotate(45deg)'};\n  }\n`;\n\nexport default Label;\n","import styled from 'styled-components';\n\nconst QuestionWrapper = styled.div`\n  margin-bottom: 2.5rem;\n`;\n\nexport default QuestionWrapper;\n","import Label from './Label.style';\nimport Input from './Input.style';\n\ninterface Props {\n  checked: boolean;\n  onChange: (value: string | number, isChecked: boolean) => void;\n  value: string | number;\n  label: string;\n  disabled?: boolean;\n}\n\nconst Radio = ({\n  checked,\n  onChange,\n  value,\n  label,\n  disabled = false,\n}: Props) => {\n  const name = String(value);\n  return (\n    <Label htmlFor={name} checked={checked}>\n      <Input\n        id={name}\n        value={value}\n        name={name}\n        type=\"radio\"\n        checked={checked}\n        onChange={() => !disabled && onChange(value, !checked)}\n        disabled={disabled}\n      />\n      <span>{label}</span>\n    </Label>\n  );\n};\n\nexport default Radio;\n","import { useCallback } from 'react';\nimport { Option } from './types';\nimport Radio from './Radio';\nimport Title from './Title.style';\nimport Description from './Description.style';\nimport Choices from './Choices.style';\nimport Question from \"./Question.style\";\n\ninterface Props {\n  options: Option[];\n  selectedOption: Option | null;\n  onChange: (selected: Option | null) => void;\n  title: string;\n  description?: string;\n  disabled?: boolean;\n}\n\nconst RadioGroup = ({\n  options,\n  selectedOption,\n  onChange,\n  title,\n  description,\n  disabled = false,\n}: Props) => {\n  const onOptionChange = useCallback(\n    (value, checked) => {\n      if (disabled) {\n        return;\n      }\n      if (!checked) {\n        return onChange(null);\n      }\n      const checkedOption = options.find((o) => o.value === value);\n      checkedOption && onChange(checkedOption);\n    },\n    [disabled, options, onChange],\n  );\n  return (\n    <Question>\n      {title && <Title>{title}</Title>}\n      <Choices>\n        {options.map((o) => (\n          <Radio\n            key={o.value}\n            checked={o === selectedOption}\n            onChange={onOptionChange}\n            value={o.value}\n            label={o.label}\n          />\n        ))}\n      </Choices>\n      {description && <Description>{description}</Description>}\n    </Question>\n  );\n};\n\nexport default RadioGroup;\n","import styled from 'styled-components';\n\nconst TitleStyle = styled.h4`\n  color: ${(p) => p.theme.colors.textPrimary};\n  font-size: 2rem;\n  margin-bottom: 0.6em;\n  margin-top: 0;\n\n  @media (max-width: 450px) {\n    font-size: 1.4rem;\n  }\n`;\n\nexport default TitleStyle;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import { Colored, Main, PageWrapper, Section } from '../components/utils';\nimport Header from '../components/Header';\nimport BlockQuote from '../components/BlockQuote';\nimport { useState } from 'react';\nimport RadioGroup from '../components/forms/RadioGroup';\nimport { Option, Question } from '../components/forms/types';\nimport CheckboxGroup from '../components/forms/CheckboxGroup';\n\nconst questions: Question[] = [\n  {\n    id: 'storage-type',\n    title: 'What do we store',\n    type: 'radio',\n    description:\n      'Unlike normal file storage, webapps like React and Vue have a ' +\n      'default path, and error pages.',\n    options: [\n      { value: 'webapp', label: 'A webapp' },\n      { value: 'files', label: 'Files' },\n    ],\n  },\n  {\n    id: 'staging-env',\n    title: 'Do we want a staging environment',\n    type: 'radio',\n    description:\n      'A staging (or test) environment would mean a duplicate ' +\n      'set of buckets. The cost is insignificant.',\n    options: [\n      { value: true, label: 'Yes' },\n      { value: false, label: 'No' },\n    ],\n  },\n];\n\ntype RadioSelectionMap = {\n  [questionId: string]: Option | null;\n};\ntype CheckboxSelectionMap = {\n  [questionId: string]: Option[];\n};\n\nconst getDefaultRadioOption = (question: Question): Option | null =>\n  question.options.find((o) => o.value === question.defaultValue) || null;\n\nconst getDefaultCheckboxOption = (question: Question): Option[] => {\n  if (!question.defaultValue) {\n    return [];\n  }\n  if (typeof question.defaultValue === 'string') {\n    return question.options.filter((o) => o.value === question.defaultValue);\n  }\n  if (question.defaultValue instanceof Array) {\n    return question.options.filter((o) =>\n      (question.defaultValue as (string | number)[]).includes(o.value)\n    );\n  }\n  return [];\n};\n\nconst generateDefaultRadioSelectedOptions = (\n  radioQuestions: Question[]\n): RadioSelectionMap => {\n  return radioQuestions\n    .filter((q) => q.type === 'radio')\n    .reduce(\n      (map, question) => ({\n        ...map,\n        [question.id]: getDefaultRadioOption(question),\n      }),\n      {}\n    );\n};\n\nconst generateDefaultCheckboxSelectedOptions = (\n  checkboxQuestions: Question[]\n): CheckboxSelectionMap => {\n  return checkboxQuestions\n    .filter((q) => q.type === 'checkbox')\n    .reduce(\n      (map, question) => ({\n        ...map,\n        [question.id]: getDefaultCheckboxOption(question),\n      }),\n      {}\n    );\n};\n\nexport default function Home() {\n  const [selectedRadioOptions, setSelectedRadioOptions] = useState<\n    RadioSelectionMap\n  >(generateDefaultRadioSelectedOptions(questions));\n  const [selectedCheckboxOptions, setSelectedCheckboxOptions] = useState<\n    CheckboxSelectionMap\n  >(generateDefaultCheckboxSelectedOptions(questions));\n\n  return (\n    <PageWrapper>\n      <Header />\n      <Main>\n        <BlockQuote\n          author={'Lolrus, the bucket walrus'}\n          source={'At the launch of AWS S3 in 2006'}>\n          <>\n            Hosting a<Colored> webapp </Colored>\n            or need to store uploads? Put them in S3 buckets. It&apos;s\n            <Colored> cheap </Colored>\n            and\n            <Colored> reliable</Colored>. Let me show how\n            <Colored> easy </Colored>\n            it is.\n          </>\n        </BlockQuote>\n      </Main>\n      <Section>\n        {questions.map((question) => {\n          if (question.type === 'radio') {\n            return (\n              <RadioGroup\n                key={question.id}\n                options={question.options}\n                selectedOption={selectedRadioOptions[question.id] || null}\n                onChange={(value) =>\n                  setSelectedRadioOptions((prev) => ({\n                    ...prev,\n                    [question.id]: value,\n                  }))\n                }\n                title={question.title}\n                description={question.description}\n              />\n            );\n          } else if (question.type === 'checkbox') {\n            return (\n              <CheckboxGroup\n                key={question.id}\n                options={question.options}\n                selectedOptions={selectedCheckboxOptions[question.id] || []}\n                onChange={(value) =>\n                  setSelectedCheckboxOptions((prev) => ({\n                    ...prev,\n                    [question.id]: value,\n                  }))\n                }\n                title={question.title}\n                description={question.description}\n              />\n            );\n          }\n          throw new Error(`Unexpected question type ${question.type}`)\n        })}\n      </Section>\n    </PageWrapper>\n  );\n}\n"],"mappings":"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","sourceRoot":""}