{"version":3,"file":"static/webpack/static/development/pages/index.js.531483daf9b5943aca3c.hot-update.js","sources":["webpack:///./questions/useQuestions.ts"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { QUESTION_ID } from '../enums';\nimport { Answer, AnswerMap } from '../types';\nimport {\n  getDefaultAnswer,\n  getNormalizedAnswer,\n  getQuestionsToRender, normalizeAnswer\n} from \"./utils\";\nimport { questions } from './data';\nimport { useUrlState } from '../utils/urls';\n\nconst useQuestions = () => {\n  const [answeredQuestions, setAnsweredQuestions] = useState<QUESTION_ID[]>([]);\n  const { urlData, updateUrlData } = useUrlState();\n  const [answers, setAnswers] = useState<AnswerMap>();\n  useEffect(() => {\n    if (answeredQuestions.length > 0) {\n      return\n    }\n    const defaultAnswers = questions.reduce(\n      (map, question) => ({\n        ...map,\n        [question.id]: urlData[question.id] || getDefaultAnswer(question),\n      }),\n      {} as AnswerMap\n    );\n    setAnswers(defaultAnswers)\n  }, [urlData, answeredQuestions]);\n  const renderQuestions = useMemo(\n    () => getQuestionsToRender(answers, answeredQuestions),\n    [answeredQuestions, answers]\n  );\n  const hasAnsweredAll = !renderQuestions.find(\n    (q) => !answeredQuestions.includes(q.id)\n  );\n  const answerQuestion = useCallback(\n    (questionId: QUESTION_ID, answer: Answer) => {\n      updateUrlData({ [String(questionId)]: normalizeAnswer(answer) });\n      setAnswers((prevAnswers) => ({\n        ...prevAnswers,\n        [questionId]: answer,\n      }));\n      setAnsweredQuestions((qs) => [...qs, questionId]);\n    },\n    [updateUrlData]\n  );\n  return { answers, renderQuestions, answerQuestion, hasAnsweredAll };\n};\n\nexport default useQuestions;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAIA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}