{"version":3,"file":"static/webpack/static/development/pages/index.js.e06af3ddcee015914022.hot-update.js","sources":["webpack:///./components/Infrastructure/Code.tsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\n\nimport Mute from './Mute.style';\nimport Pre from './Pre.style';\nimport PreButton from './PreButton.style';\nimport { useCallback, useMemo, useState } from \"react\";\n\ntype Props = { mainTfContent: string[]; bucketName: string };\n\nconst copyToClipBoard = (texts: string[]) => {\n  const textField = window.document.createElement('textarea');\n  textField.setAttribute(\n    'style',\n    'position: absolute; bottom: 0; top: 0; white-space: pre-line;'\n  );\n  textField.innerHTML = '';\n  texts.forEach(text => { textField.innerHTML += `${text}<br />`})\n  document.body.appendChild(textField);\n  textField.select();\n  document.execCommand('copy');\n};\n\nconst Code = ({ mainTfContent, bucketName }: Props) => {\n  const [hasCopied, setHasCopied] = useState<boolean>(false);\n  const lines = useMemo(()=>[\n    '# Create a folder to store infrastructure code',\n    'mkdir infrastructure',\n    'cd infrastructure',\n    '',\n    '# Create config file',\n    `cat <<EOT >> ${bucketName || 'main'}.tf`,\n    ...mainTfContent,\n    'EOT',\n    '',\n    '# Deploy',\n    'terraform init',\n    'terraform apply',\n  ], [mainTfContent, bucketName]);\n  const copy = useCallback(() => {\n    copyToClipBoard(lines)\n    setHasCopied(true);\n  }, [lines])\n  return (\n    <Pre>\n      {lines.map((line, i) => {\n        if (line.trim().startsWith('#')) {\n          return (\n            <Mute key={i}>\n              {line}\n              {'\\n'}\n            </Mute>\n          );\n        }\n        return (\n          <span key={i}>\n            {line}\n            {'\\n'}\n          </span>\n        );\n      })}\n      <PreButton onClick={copy}>\n        {hasCopied && 'Copied!' || 'Copy to clipboard'}\n      </PreButton>\n    </Pre>\n  );\n};\n\nexport default Code;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}