{"version":3,"file":"static/webpack/static/development/pages/index.js.0999fd5d61fbb1830e7c.hot-update.js","sources":["webpack:///./components/forms/TextInput.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport Header from '../Header.style';\nimport Description from './Description.style';\nimport Question from './Question.style';\nimport Input from './Input.style';\nimport InputContainer from './InputContainer.styles';\nimport SubmitButton from './SubmitButton.styles';\nimport { sleep } from \"../utils\";\n\ninterface Props {\n  id: string;\n  value?: string;\n  onSubmit: (selected: string) => void;\n  title: string;\n  placeholder?: string;\n  placeholders?: string[];\n  description?: string;\n  disabled?: boolean;\n}\n\nconst TextInput = ({\n  onSubmit,\n  value = '',\n  title,\n  placeholder,\n  placeholders,\n  description,\n}: Props) => {\n  const [inputValue, setInputValue] = useState<string>(value);\n  const [hasSubmitted, setSubmitted] = useState<boolean>(false);\n  const [placeholderIndex, setPlaceholderIndex] = useState<number>(placeholders?.length ? 0 : -1);\n  const [currentPlaceHolder, setCurrentPlaceHolder]= useState<string>(placeholderIndex === -1 ? placeholder: placeholders[placeholderIndex])\n  useEffect(() => {\n    if (!placeholders && placeholders.length > 2) {\n      return\n    }\n\n    const go = async () => {\n      await sleep(7000)\n      const oldPlaceHolder = placeholders[placeholderIndex];\n      const newPlaceHolder = placeholders[(placeholderIndex + 1) % placeholders.length];\n      const steps = oldPlaceHolder.length + newPlaceHolder.length + 4;\n      const stepSizeMs = 25;\n      for (let i = 0; i <= steps; i++) {\n        const shouldRemove = i <= oldPlaceHolder.length;\n        const shouldAdd = steps - i <= newPlaceHolder.length;\n        if (shouldRemove) {\n          setCurrentPlaceHolder(oldPlaceHolder.substr(0, oldPlaceHolder.length - i));\n        } else if (shouldAdd) {\n          setCurrentPlaceHolder(newPlaceHolder.substr(0, newPlaceHolder.length - (steps - i)))\n        }\n        //  â€“ it's ok in a for loop\n        // eslint-disable-next-line no-await-in-loop\n        await sleep(stepSizeMs);\n      }\n      setPlaceholderIndex(index => index + 1 % placeholders.length)\n    };\n    go();\n  }, [placeholderIndex])\n\n  const submit = (submitValue) => {\n    setSubmitted(true);\n    onSubmit(submitValue);\n  };\n  return (\n    <Question>\n      {title && <Header>{title}</Header>}\n      <InputContainer>\n        <Input\n          type=\"text\"\n          value={inputValue}\n          placeholder={currentPlaceHolder}\n          onChange={(e) => {\n            setInputValue(e.target.value);\n            if (hasSubmitted) {\n              onSubmit(e.target.value);\n            }\n          }}\n          onKeyPress={(e) => e.key === 'Enter' && submit(inputValue)}\n          onBlur={() => submit(inputValue)}\n        />\n        <SubmitButton\n          type=\"submit\"\n          complete={inputValue.trim().length > 0}\n          onClick={() => submit(inputValue)}\n        />\n      </InputContainer>\n      {description && <Description>{description}</Description>}\n    </Question>\n  );\n};\n\nexport default TextInput;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAjBA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAkBA;AAAA;AAAA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}