{"version":3,"file":"static/webpack/static/development/pages/index.js.6bd2bf414d44a204f1a4.hot-update.js","sources":["webpack:///./components/BlockQuote/index.tsx","webpack:///./pages/index.tsx"],"sourcesContent":["import { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nimport Quote from './Quote';\nimport Source from './Source';\n\ntype Props = {\n  children: ReactNode;\n  author?: string;\n  source?: string;\n};\n\nconst BlockQuote = ({ children, author, source }: Props) => (\n  <Block>\n    <Quote>{children}</Quote>\n    {(author || source) && (\n      <Source>\n        {author ? (\n          <>\n            &mdash;\n            {author}\n          </>\n        ) : ''}\n        {author && source && <br />}\n        {source && <em>{source}</em>}\n      </Source>\n    )}\n  </Block>\n);\n\nconst Block = styled.blockquote`\n  font-family: ${(p) => p.theme.fonts.secondary}\n  max-width: 620px;\n  margin-left: 0;\n  margin-right: 0;\n  align-self: center;\n`;\n\nexport default BlockQuote;\n","import { Colored, Main, PageWrapper } from '../components/utils';\nimport Header from '../components/Header';\nimport BlockQuote from '../components/BlockQuote';\n\nexport default function Home() {\n  return (\n    <PageWrapper>\n      <Header />\n      <Main>\n        <BlockQuote\n          author={'Lolrus, the bucket walrus'}\n          source={'At the launch of AWS S3 in 2006'}\n        >\n          <>\n            Hosting a\n            {' '}\n            <Colored> webapp</Colored>\n            {' '}\n            or need to store uploads? Put\n            them in S3 buckets. It&apos;s\n            {' '}\n            <Colored> cheap</Colored>\n            {' '}\n            and\n            {' '}\n            <Colored> reliable</Colored>\n            . Let me show how\n            <Colored> easy</Colored>\n            {' '}\n            it is.\n          </>\n        </BlockQuote>\n      </Main>\n    </PageWrapper>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AACA;AAiBA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}